<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogging on Class &amp; Objects</title>
    <link>http://classandobjects.com/tags/blogging/</link>
    <description>Recent content in Blogging on Class &amp; Objects</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Sep 2016 22:35:37 +0530</lastBuildDate>
    <atom:link href="http://classandobjects.com/tags/blogging/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Add Subscribe Button to Your Website, also Add a Scroll Triggered Subscribe Box</title>
      <link>http://classandobjects.com/tutorial/add_subscribe_button_on_static_site/</link>
      <pubDate>Fri, 16 Sep 2016 22:35:37 +0530</pubDate>
      
      <guid>http://classandobjects.com/tutorial/add_subscribe_button_on_static_site/</guid>
      <description>

&lt;p&gt;Subscribe button is a useful feature to have on any website. It helps you create loyal audience base and helps your users get amazing content from the blogs they love. It can be quite easy to integrate one on a WordPress site or a website with a backend. In this article, I will show you how to add a subscribe button to any static website using &lt;a href=&#34;www.formspree.io&#34;&gt;formspree.io&lt;/a&gt;, &lt;a href=&#34;https://github.com/hubspot/vex&#34;&gt;Vex js&lt;/a&gt; and javascript. I will also show how you can add a subscribe box(popup) when a user has scrolled the page. I am using Hugo as my static site generator, the process is exactly the same for any static site. So let&amp;rsquo;s get started.&lt;/p&gt;

&lt;h2 id=&#34;setup-vex-js:80997bc7bd7f5c85dacbd7579f4f2263&#34;&gt;Setup Vex js&lt;/h2&gt;

&lt;p&gt;I did my little research and found out Vex js is the best dialogue(popup) creator library. It is &lt;strong&gt;light, good looking and has zero dependencies&lt;/strong&gt;, and that is all we need. First, you will need to &lt;a href=&#34;http://github.hubspot.com/vex/api/themes/&#34;&gt;select a theme&lt;/a&gt;, visit the link to see examples of all the themes which you can use. Select the one you like and download it from here. Also download &lt;code&gt;vex-theme-bottom-right-corner&lt;/code&gt;, if you want to do a subscribe popup after scrolling your page. You will need to &lt;a href=&#34;https://github.com/HubSpot/vex/tree/master/dist/js&#34;&gt;download vex.combined.min.js&lt;/a&gt; from this link. Make sure you have one theme CSS file and one Vex combined js file. Now you will want to store this file to your static directory, where you have your Javascript and CSS.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: Skip to the next step if you are not using HUGO.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In case of Hugo, I will put it under the themes as follow:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/themes
  /theme-name
    /js
      vex.combined.min.js
    /css
      vex-theme-name.css
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;add-a-subscribe-button:80997bc7bd7f5c85dacbd7579f4f2263&#34;&gt;Add a subscribe button&lt;/h2&gt;

&lt;p&gt;Now, after having set up Vex, we want a form to be shown to the user when  they click the Subscribe button.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;!-- for normal HTML --&amp;gt;
&amp;lt;!-- include css and js like this --&amp;gt;
&amp;lt;script src=&amp;quot;path/to/myscripts.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;path/to/mystyle.css&amp;quot;&amp;gt;
&amp;lt;!-- most of the times they are included in the `footer` partial in Hugo. --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Add this button in your html file --&amp;gt;
&amp;lt;button onclick=&amp;quot;subscribe()&amp;quot;&amp;gt;Subscribe&amp;lt;/button&amp;gt;

&amp;lt;script&amp;gt;
function hide (elements) {
  elements = elements.length ? elements : [elements];
  for (var index = 0; index &amp;lt; elements.length; index++) {
    elements[index].style.display = &#39;none&#39;;
  }
}

function subscribe() {
    // replace vex-theme-plain with the name of your theme
    vex.defaultOptions.className = &#39;vex-theme-plain&#39;;
    var vexId = vex.dialog.open({
    message: &#39;Get latest updates, enter your email:&#39;,
    input: [
        &#39;&amp;lt;input name=&amp;quot;email&amp;quot; type=&amp;quot;text&amp;quot; placeholder=&amp;quot;jhondoe@domain.com&amp;quot; required /&amp;gt;&#39;,
    ].join(&#39;&#39;),
    buttons: [
        $.extend({}, vex.dialog.buttons.YES, { text: &#39;Subscribe&#39; }),
        $.extend({}, vex.dialog.buttons.NO, { text: &#39;Back&#39; })
    ],
    callback: function (data) {
        if (!data) {
                }
                else {
            var email_value = data.email;
                        var form = document.createElement(&amp;quot;form&amp;quot;);
                        form.setAttribute(&#39;method&#39;,&amp;quot;post&amp;quot;);
                        //replace below email with your email
                        form.setAttribute(&#39;action&#39;, &amp;quot;http://formspree.io/classandobjects@gmail.com&amp;quot;);

                        var input = document.createElement(&amp;quot;input&amp;quot;); //input element, text
                        input.setAttribute(&#39;type&#39;,&amp;quot;email&amp;quot;);
                        input.setAttribute(&#39;name&#39;,&amp;quot;email&amp;quot;);
                        input.value = email_value;

                        form.appendChild(input);
                        form.submit();
        }
                // In most cases you wont need the below line, but after clicking submit or cancel if the box does not closes for some reason, you will want to uncommnet the line below.
                // hide(document.querySelectorAll(&#39;.vex&#39;));
    },
    });
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the above example just replace classandobects@gmail.com with you own email address and the theme name with your selected Vex theme. This should be enough to get you started. Formspree.io allow you to get 1000 emails for free and is fairly easy to use. Until now you have implemented a subscribe option like the one you get when you click the &lt;code&gt;envelope&lt;/code&gt; icon on your left.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TIP: You will have to verify the first email you get via formspree.io&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;bonus-adding-a-subscribe-form-on-scroll:80997bc7bd7f5c85dacbd7579f4f2263&#34;&gt;Bonus, Adding a subscribe form on scroll&lt;/h2&gt;

&lt;p&gt;Try scrolling below on this site and as you reach around &lt;strong&gt;70%&lt;/strong&gt;, you get a popup to subscribe. You should continue this step if you want to implement something similar to this.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: &lt;code&gt;jQuery&lt;/code&gt; is a requirement for this step. There are high chances that you are already using jQuery.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
  function createSidePopup() {
    if (document.querySelectorAll(&#39;.vex&#39;).length == 0) {
        vex.defaultOptions.className = &#39;vex-theme-bottom-right-corner&#39;;
        var vexId = vex.dialog.open({
        message: &#39;Why not subscribe for more! Email Please&#39;,
        input: [
            &#39;&amp;lt;input name=&amp;quot;email&amp;quot; type=&amp;quot;text&amp;quot; placeholder=&amp;quot;jhondoe@domain.com&amp;quot; required /&amp;gt;&#39;,
        ].join(&#39;&#39;),
        buttons: [
            $.extend({}, vex.dialog.buttons.YES, { text: &#39;Subscribe&#39; }),
            $.extend({}, vex.dialog.buttons.NO, { text: &#39;Back&#39; })
        ],
        callback: function (data) {
            if (!data) {
                    }
                    else {
                var email_value = data.email;
                            var form = document.createElement(&amp;quot;form&amp;quot;);
                            form.setAttribute(&#39;method&#39;,&amp;quot;post&amp;quot;);
                            form.setAttribute(&#39;action&#39;, &amp;quot;http://formspree.io/classandobjects@gmail.com&amp;quot;);

                            var input = document.createElement(&amp;quot;input&amp;quot;);
                            input.setAttribute(&#39;type&#39;,&amp;quot;email&amp;quot;);
                            input.setAttribute(&#39;name&#39;,&amp;quot;email&amp;quot;);
                            input.value = email_value;

                            form.appendChild(input);
                            form.submit();
            }
                    hide(document.querySelectorAll(&#39;.vex&#39;));
        },
        });
    }
}

function onScrollSubscribePopup () {
    {{ if .IsPage }}
    $(document).ready(function() {
        $(window).scroll(function(e){
            var scrollTop = $(window).scrollTop();
            var docHeight = $(document).height();
            var winHeight = $(window).height();
            var scrollPercent = (scrollTop) / (docHeight - winHeight);
            var scrollPercentRounded = Math.round(scrollPercent*100);
            if (scrollPercentRounded &amp;gt; 70 &amp;amp;&amp;amp; scrollPercentRounded &amp;lt;     80) {
                createSidePopup();
            }
        });
    });
    {{ end }}
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code to calculate the scroll percentage has been taken from this &lt;a href=&#34;https://codepen.io/achudars/pen/Cpast&#34;&gt;codepen&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:80997bc7bd7f5c85dacbd7579f4f2263&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I believe this post was helpful for creating a subscribe button. If you find any issue with the above code or need any help do let me know in the comments below. Thanks for reading!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Hugo is best for blogging? You should use it too!</title>
      <link>http://classandobjects.com/blogs/why_hugo/</link>
      <pubDate>Wed, 18 May 2016 19:45:15 +0530</pubDate>
      
      <guid>http://classandobjects.com/blogs/why_hugo/</guid>
      <description>

&lt;p&gt;Just like any blogger, I also wanted to start my own blog. I had many doubts. What is my niche? Will people read my blog? Which platform to use for blogging? I do not know if I have found my answers, but for the last one it is &lt;strong&gt;HUGO&lt;/strong&gt;. Yes, I searched for different blogging platforms and all had their own set of drawbacks. Here are few reasons for not selecting them :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Blogger : Free, SEO optimized, but no good themes&lt;/li&gt;
&lt;li&gt;Wordpress : Good themes, SEO Optimized, but costly&lt;/li&gt;
&lt;li&gt;Quora : Good theme, Free, but not SEO optimized&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I would have used Wordpress, but I discovered &lt;strong&gt;HUGO&lt;/strong&gt;, which is times faster and way cheaper than Wordpress. Here I am on Hugo and doing amazing stuffs. Here are the reasons why I love Hugo:&lt;/p&gt;

&lt;h2 id=&#34;fast-very-fast:47e02ac62400e2bf33a3dc648fdd1233&#34;&gt;Fast, very fast&lt;/h2&gt;

&lt;p&gt;I did my research and found out that hugo is faster than Wordpress and many other products(static site generators) like Jekyll and Octopress2. You can see this &lt;a href=&#34;https://youtu.be/CdiDYZ51a2o&#34;&gt;video&lt;/a&gt; on hugo official website and get the estimate. For detailed comparison, this &lt;a href=&#34;http://conscientiousprogrammer.com/blog/2015/05/31/why-i-switched-from-octopress-2-to-hugo/&#34;&gt;blog&lt;/a&gt; is also an awesome resource.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In simple words, Hugo creates and stores your HTML file just once. This reduces the delay of creating HTML content every time. These files do not require much resource(CPU, Memory, etc), thus it can be hosted cheap.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;themes-beautiful-themes:47e02ac62400e2bf33a3dc648fdd1233&#34;&gt;Themes, beautiful themes&lt;/h2&gt;

&lt;p&gt;I am crazy about the look and feel of anything. Say me nuts, but I will not use anything that does not look good. It may have lot of functionalities, but the feel is equally important to me. Hugo has a good set of themes you can choose from and customize, if needed. You can also create your own theme. This is also a theme called as &lt;a href=&#34;http://themes.gohugo.io/crisp/&#34;&gt;Hugo Crips&lt;/a&gt;. I liked it for its simplicity. You can explore more hugo themes at &lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;themes.gohugo.io&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;ease-of-setup:47e02ac62400e2bf33a3dc648fdd1233&#34;&gt;Ease of Setup&lt;/h2&gt;

&lt;!-- point about setup blog on ubuntu --&gt;

&lt;p&gt;Setting up hugo is also really easy. They have setup files for most of the Operating system. You can find them &lt;a href=&#34;https://github.com/spf13/hugo/releases/tag/v0.15&#34;&gt;here&lt;/a&gt;.
You can just click and install it just like any other operating system. For ubuntu users they can download &lt;code&gt;hugo_0.15_amd64.deb&lt;/code&gt; or &lt;code&gt;*.deb&lt;/code&gt; files depending on their platform. Then installing is just a matter of clicks.&lt;/p&gt;

&lt;h2 id=&#34;host-for-free:47e02ac62400e2bf33a3dc648fdd1233&#34;&gt;Host for free&lt;/h2&gt;

&lt;!-- point about hosting github detailed blog --&gt;

&lt;p&gt;It is almost free to host them. They can be hosted for free on &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;github&lt;/a&gt; or &lt;a href=&#34;https://gohugo.io/tutorials/hosting-on-bitbucket/&#34;&gt;bitbucket&lt;/a&gt; with links to their respective official tutorial. You can also see &lt;a href=&#34;http://classandobjects.com/hugo/host_static_site_on_github&#34;&gt;how to host a static website easily on github&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A domain will cost you just $5 per year.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;warning:47e02ac62400e2bf33a3dc648fdd1233&#34;&gt;Warning&lt;/h2&gt;

&lt;p&gt;Hugo has lots of features built-in, like &lt;code&gt;syntax highlighting&lt;/code&gt;, table of contents, pagination, etc. It has almost all the things you need for content development. If you want something more, you may have to wait or tinker around. Optimistically, you may create something which is missing and help the whole hugo community.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:47e02ac62400e2bf33a3dc648fdd1233&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Do you see &lt;strong&gt;Hugo is fast, beautiful, easy and free&lt;/strong&gt;. If you can take initial trouble of setting it up and getting is started, which is minimal, you are going to reap its benefits. Tough, you should remember hugo has just started its journey. So, awaken the hacker in you and get started&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>