<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Framework Battle on Class &amp; Objects</title>
    <link>http://classandobjects.com/categories/framework-battle/</link>
    <description>Recent content in Framework Battle on Class &amp; Objects</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Jun 2016 22:08:08 +0530</lastBuildDate>
    <atom:link href="http://classandobjects.com/categories/framework-battle/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Selecting the Right Framework</title>
      <link>http://classandobjects.com/guides/selecting_right_framework/</link>
      <pubDate>Sun, 19 Jun 2016 22:08:08 +0530</pubDate>
      
      <guid>http://classandobjects.com/guides/selecting_right_framework/</guid>
      <description>

&lt;p&gt;There is an endless debate on the best framework. Let it be backend frameworks like Rails, Django and NodeJs or frontend frameworks like Angular, Ember and React. I have spent hours reading through all these debates, and made few conclusions. I have found out a solid way of &lt;strong&gt;selecting the best framework for your job&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;past-experience:bc4e9a1dd2237de84731d6bf70a28152&#34;&gt;Past Experience&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Experience is the best teacher!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is right to say that few things can only be learnt via experience, alone. This can give you the best start in selecting the framework you need. If you already have an experience with a framework, you should try to figure out that is it suitable for task that you are trying to do. Are there other projects, which are similar in structure, made using that framework. Else, you should try answering what are your &lt;em&gt;sour&lt;/em&gt; experiences using that particular framework. It will give you an intuition about using that framework or not.&lt;/p&gt;

&lt;p&gt;If you do not have the past experience, try to figure out what is your style of programming. Which language and framework suits your style of coding. If you like neat, self-controlled structure you may like Python. If you like fast, convention oriented design you may love Ruby. If you like to have same technology in frontend as well as backend you may like JavaScript. This should be the first and most important factor determining your technology of choice. You will probably be working for long on the code base and want to have good control over you system.&lt;/p&gt;

&lt;h2 id=&#34;team-qualification:bc4e9a1dd2237de84731d6bf70a28152&#34;&gt;Team Qualification&lt;/h2&gt;

&lt;p&gt;You cannot do everything alone. Think about who your other project mates are. What are the technology they like. Do a consensus and find out what is the best bet for your team. Always remember that frameworks and languages are just tools. You can get almost everything with anything, but it is always better to keep your mates in mind. This helps keep productivity high and team comfortable.&lt;/p&gt;

&lt;h2 id=&#34;market-analysis:bc4e9a1dd2237de84731d6bf70a28152&#34;&gt;Market Analysis&lt;/h2&gt;

&lt;p&gt;Now comes the point of these debates and Reddit threads. You should read and try to avoid getting biased to your likes. Also avoid &lt;em&gt;Green Grass Syndrome&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Quote: The grass is greener on the other side&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These things tend to happen. What you should keep in mind is like finding similar product which used the same technology. This would avoid a rollback in middle of the project. You can be sure that if someone has build a similar &lt;em&gt;good&lt;/em&gt; product, you can do that easily too. You can rely on their expertise and research which turns out to be true most of the times.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tip: Always follow your gut when not sure&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;conclusion:bc4e9a1dd2237de84731d6bf70a28152&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I believe that &lt;em&gt;past experience, team comfort and existing product analysis&lt;/em&gt; are the best way to find the best technology stack for you.
If you have some difference in opinion do point it in the comments below. Do not forget to share it with your friends if you liked it. Thanks for reading!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>